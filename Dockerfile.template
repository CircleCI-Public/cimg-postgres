# vim:set ft=dockerfile:

# Do not edit individual Dockerfiles manually. Instead, please make changes to the Dockerfile.template, which will be used by the build script to generate Dockerfiles.

# By policy, the base image tag should be a quarterly tag unless there's a
# specific reason to use a different one. This means January, April, July, or
# October.

FROM cimg/%%PARENT%%:2023.01

LABEL maintainer="Community & Partner Engineering Team <community-partner@circleci.com>"

ENV PG_VER=%%VERSION_FULL%%
ENV PG_MAJOR=%%VERSION_MAJOR%%
ENV POSTGRES_HOST_AUTH_METHOD=trust

USER root
RUN apt-get update && apt-get install -y --no-install-recommends \
		clang \
		dirmngr \
		gnupg \
		gosu \
		libclang-dev \
		libicu-dev \
		libipc-run-perl \
		libkrb5-dev \
		libldap2-dev \
		liblz4-dev \
		libpam-dev \
		libperl-dev \
		libpython3-dev \
		libreadline-dev \
		libssl-dev \
		libxml2-dev \
		libxslt1-dev \
		llvm \
		llvm-dev \
		locales \
		python3-dev \
		tcl-dev \
		uuid-dev \
	&& \
	rm -rf /var/lib/apt/lists/* && \
	localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 && \
	curl -sSL "https://ftp.postgresql.org/pub/source/v${PG_VER}/postgresql-${PG_VER}.tar.gz" | tar -xz && \
	cd postgresql-${PG_VER} && \
	./configure \
		--prefix=/usr/lib/postgresql/$PG_MAJOR \
		--enable-integer-datetimes \
		--enable-thread-safety \
		--enable-tap-tests \
		--with-uuid=e2fs \
		--with-gnu-ld \
		--with-pgport=5432 \
		--with-system-tzdata=/usr/share/zoneinfo \
		--with-includes=/usr/local/include \
		--with-libraries=/usr/local/lib \
		--with-krb5 \
		--with-gssapi \
		--with-ldap \
		--with-pam \
		--with-tcl \
		--with-perl \
		--with-python \
		--with-openssl \
		--with-libxml \
		--with-libxslt \
		--with-icu \
		--with-llvm \
		--with-lz4 \
	&& \
	# we can change from world to world-bin in newer releases
	make world && \
	make install-world && \
	# clones pg_cron extension for local use, this is not available wihout installing
 	git clone https://github.com/citusdata/pg_cron.git /pg_cron && \
	cd pg_cron && make && make install && \
	cron_conf=/var/lib/postgresql/data/custom-conf.conf && echo "" > $cron_conf && \
	echo "shared_preload_libraries = 'pg_cron'" >> $cron_conf && \
	echo "cron.database_name = 'postgres'" >> $cron_conf && \
	chown postgres $cron_conf && \
	chgrp postgres $cron_conf && \
	found=$(grep "include = '$cron_conf'" /var/lib/postgresql/data/postgresql.conf) && \
	# if the cron_conf is not in the postgresql.conf file, we add it to the file before continuing.
	if [ -z "$found" ]; then 
	  echo "include = '$cron_conf'" >> /var/lib/postgresql/data/postgresql.conf \
	fi 
	
RUN mkdir /docker-entrypoint-initdb.d

ENV PATH /usr/lib/postgresql/$PG_MAJOR/bin:$PATH
ENV PGDATA /var/lib/postgresql/data

RUN useradd postgres -m -s /bin/bash && \
	groupadd --force postgres && \
	adduser postgres postgres

ENV POSTGRES_DB=circle_test

RUN curl -sSL "http://raw.githubusercontent.com/docker-library/postgres/master/docker-entrypoint.sh" -o /usr/local/bin/docker-entrypoint.sh && \
	ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat

RUN chmod +x /usr/local/bin/docker-entrypoint.sh
RUN mkdir -p /var/lib/postgresql && \
	chown -R postgres:postgres /var/lib/postgresql && \
	chown -R postgres:postgres /usr/local/bin/docker-entrypoint.sh

ENTRYPOINT ["docker-entrypoint.sh"]
STOPSIGNAL SIGINT
EXPOSE 5432
CMD ["postgres"]
